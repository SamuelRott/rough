/**
 * Masonry grid
 */

// ONLY use this when your grid items have variable height and you want to
// eliminate the gaps.

// In order to solve fluid roundings, two elements are inserted with JavaScript: .Masonry-gridSizer and .gutter-sizer

// The horizontal gutter comes from the .gutter-sizer element only
// so do not use any margin-left or right on the .Masonry-gridSizer or grid items

// The grid here is responsive.
// The grid goes from 1 -> 2 -> 3 -> 4 items in each row.

// Small version
$s-columns: 2;
$s-from: 560px;

// Small/Medium version
$sm-columns: 3;
$sm-from: 730px;

// Medium version
$m-columns: 4;
$m-from: 1100px;

// Medium/Large version
$ml-columns: 5;
$ml-from: 1200px;

// Large version
$large-columns: 6;
$large-from: 1500px;


// Fade in masonry when it is ready. Class is added with js.
.Masonry {
	opacity: 0;
	transition: opacity 100ms;
	&.is-active {
		opacity: 1;
	}
}

.Masonry-item, // this selector can change
.Masonry-gridSizer {

	// Default layout
	float: left;
	width: 100%;
	margin-bottom: rem($space);

	// Make sure images scale
	img {
		width: 100%;
		max-width: 100%;
	}

	@media (min-width: em($s-from)) {
		width: columns(1, $s-columns);
		// &:nth-of-type(3) { width: columns(2,$s-columns); }
	}
	@media (min-width: em($sm-from)) {
		width: columns(1, $sm-columns);
		// different size for the first item
		// &:nth-of-type(3) { width: columns(2,$sm-columns); }
	}
	@media (min-width: em($m-from)) {
		width: columns(1, $m-columns);
		// different size for the first item
		// &:nth-of-type(3) { width: columns(2,$m-columns); }
	}
	@media (min-width: em($ml-from)) {
		width: columns(1, $ml-columns);
	}
	@media (min-width: em($large-from)) {
		width: columns(1, $large-columns);
	}
}
.Masonry-gutterSizer {
	@media (min-width: em($s-from)) {
		width: gutter($s-columns);
	}
	@media (min-width: em($sm-from)) {
		width: gutter($sm-columns);
	}
	@media (min-width: em($m-from)) {
		width: gutter($m-columns);
	}
	@media (min-width: em($ml-from)) {
		width: gutter($ml-columns);
	}
	@media (min-width: em($large-from)) {
		width: gutter($large-columns);
	}
}
